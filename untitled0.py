# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vZxKIAk10q0LJKzDsg8R-rDEA8wiBHGj
"""

import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize

def calculate_score(resume_text, keywords):
    # Tokenize the resume text
    tokens = word_tokenize(resume_text.lower())

    # Remove stop words
    stop_words = set(stopwords.words('english'))
    filtered_tokens = [token for token in tokens if token.isalnum() and token not in stop_words]

    # Calculate the score by counting the number of keyword matches
    score = sum(1 for token in filtered_tokens if token in keywords)
    return score

def find_best_candidate(resumes, keywords):
    best_candidate = None
    best_score = 0

    for i, resume_text in enumerate(resumes):
        score = calculate_score(resume_text, keywords)
        if score > best_score:
            best_candidate = resume_text
            best_score = score

    return best_candidate

# Keywords for the job
keywords = ['python', 'machine learning', 'data analysis']

# List of resumes
resumes = [
    "I have experience in Python programming and machine learning algorithms.",
    "My skills include data analysis using Python and various statistical techniques.",
    "I am proficient in Java and have worked on web development projects.",
    "I have a strong background in data analysis and statistical modeling.",
    "My expertise lies in machine learning and deep learning with Python.",
]

best_candidate = find_best_candidate(resumes, keywords)
print(f"The best candidate for the job is:\n{best_candidate}")